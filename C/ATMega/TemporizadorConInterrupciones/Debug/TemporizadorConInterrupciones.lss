
TemporizadorConInterrupciones.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001dc  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000020b  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000219  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008f7  00000000  00000000  00000251  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000623  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000266  00000000  00000000  0000116b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  000013d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00001428  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  00001630  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000013a  0000013a  000001ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001658  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.setup   00000012  0000010c  0000010c  000001a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.timer0_set 00000012  0000011e  0000011e  000001b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    0000000a  00000130  00000130  000001c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_16 00000034  000000c2  000000c2  00000156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .bss.counter  00000002  00800100  00800100  000001dc  2**0
                  ALLOC
 18 .text.__dummy_fini 00000002  00000142  00000142  000001d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_funcs_on_exit 00000002  00000144  00000144  000001d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_simulator_exit 00000002  00000146  00000146  000001da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.exit    00000016  000000f6  000000f6  0000018a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text._Exit   00000004  0000013e  0000013e  000001d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
   8:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
   c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  10:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  14:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  18:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  1c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  20:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  24:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  28:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  2c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  30:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  34:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  38:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  3c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  40:	0c 94 61 00 	jmp	0xc2	; 0xc2 <_etext>
  44:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  48:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  4c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  50:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  54:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  58:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  5c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  60:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  64:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 02       	muls	r16, r17
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 98 00 	call	0x130	; 0x130 <main>
  ba:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

0000013a <__bad_interrupt>:
 13a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.setup:

0000010c <setup>:
/*VARIABLES*/
int counter = 0;

void setup(void){
	// Puertos B y C como salidas
	DDRB = 0b11111111;
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	84 b9       	out	0x04, r24	; 4
	DDRC = 0b11111111;
 110:	87 b9       	out	0x07, r24	; 7
	// Puerto D como entrada
	DDRD = 0b00000000;
 112:	1a b8       	out	0x0a, r1	; 10
	// Se establece el valor de los puertos como 0
	PORTB = 0;
 114:	15 b8       	out	0x05, r1	; 5
	PORTC = 0;
 116:	18 b8       	out	0x08, r1	; 8
	PORTD = 0;
 118:	1b b8       	out	0x0b, r1	; 11
	sei();
 11a:	78 94       	sei
 11c:	08 95       	ret

Disassembly of section .text.timer0_set:

0000011e <timer0_set>:
    while(1){
	}
}

void timer0_set(void){
	TCCR0A = 0B00000000;
 11e:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0B00000101;
 120:	85 e0       	ldi	r24, 0x05	; 5
 122:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 128;
 124:	80 e8       	ldi	r24, 0x80	; 128
 126:	86 bd       	out	0x26, r24	; 38
	TIMSK0 = 0B00000001;
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 12e:	08 95       	ret

Disassembly of section .text.main:

00000130 <main>:
}

int main(void)
{
	// Se ejecuta la configuracion de los puertos
	setup();
 130:	0e 94 86 00 	call	0x10c	; 0x10c <setup>
	timer0_set();
 134:	0e 94 8f 00 	call	0x11e	; 0x11e <timer0_set>
 138:	ff cf       	rjmp	.-2      	; 0x138 <main+0x8>

Disassembly of section .text.__vector_16:

000000c2 <__vector_16>:
	TCNT0 = 128;
	TIMSK0 = 0B00000001;
}

ISR(TIMER0_OVF_vect, ISR_NAKED){
	if(counter == 14){
  c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  c6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  ca:	8e 30       	cpi	r24, 0x0E	; 14
  cc:	91 05       	cpc	r25, r1
  ce:	59 f4       	brne	.+22     	; 0xe6 <__vector_16+0x24>
		counter = 0;
  d0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		if(PINB & (1<<0)){
  d8:	18 9b       	sbis	0x03, 0	; 3
  da:	02 c0       	rjmp	.+4      	; 0xe0 <__vector_16+0x1e>
			PORTB = 0;
  dc:	15 b8       	out	0x05, r1	; 5
  de:	08 c0       	rjmp	.+16     	; 0xf0 <__vector_16+0x2e>
		}
		else{
			PORTB = 1;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	85 b9       	out	0x05, r24	; 5
  e4:	05 c0       	rjmp	.+10     	; 0xf0 <__vector_16+0x2e>
		}
	}
	else{
		counter = counter + 1;
  e6:	01 96       	adiw	r24, 0x01	; 1
  e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	TCNT0 = 128;
  f0:	80 e8       	ldi	r24, 0x80	; 128
  f2:	86 bd       	out	0x26, r24	; 38
	reti();
  f4:	18 95       	reti

Disassembly of section .text.__dummy_fini:

00000142 <_fini>:
 142:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000144 <__funcs_on_exit>:
 144:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000146 <__simulator_exit>:
 146:	08 95       	ret

Disassembly of section .text.exit:

000000f6 <exit>:
  f6:	ec 01       	movw	r28, r24
  f8:	0e 94 a2 00 	call	0x144	; 0x144 <__funcs_on_exit>
  fc:	0e 94 a1 00 	call	0x142	; 0x142 <_fini>
 100:	ce 01       	movw	r24, r28
 102:	0e 94 a3 00 	call	0x146	; 0x146 <__simulator_exit>
 106:	ce 01       	movw	r24, r28
 108:	0e 94 9f 00 	call	0x13e	; 0x13e <_Exit>

Disassembly of section .text._Exit:

0000013e <_Exit>:
 13e:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
