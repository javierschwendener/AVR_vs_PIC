

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Aug 23 19:09:20 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0005                     _PORTAbits	set	5
   205  0008                     _PORTD	set	8
   206  0006                     _PORTB	set	6
   207  0005                     _PORTA	set	5
   208  0088                     _TRISD	set	136
   209  0086                     _TRISB	set	134
   210  0085                     _TRISA	set	133
   211  0189                     _ANSELH	set	393
   212  0188                     _ANSEL	set	392
   213                           
   214                           	psect	cinit
   215  07F8                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07F8                     __initialization:
   219                           
   220                           ; Clear objects allocated to COMMON
   221  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   222  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   223  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   224  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   225  07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  07FC                     __end_of__initialization:
   229  07FC  0183               	clrf	3
   230  07FD  120A  118A  2F51   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233  0070                     __pbssCOMMON:
   234  0070                     _infnibble:
   235  0070                     	ds	2
   236  0072                     _supnibble:
   237  0072                     	ds	2
   238                           
   239                           	psect	cstackCOMMON
   240  0074                     __pcstackCOMMON:
   241  0074                     ?_setup:
   242  0074                     ??_setup:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0074                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0074                     ??_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 1 bytes @ 0x0
   253  0074                     	ds	1
   254                           
   255                           	psect	maintext
   256  0751                     __pmaintext:	
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 41 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : B00/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   276 ;;      Params:         0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0
   278 ;;      Temps:          1       0       0       0       0
   279 ;;      Totals:         1       0       0       0       0
   280 ;;Total ram usage:        1 bytes
   281 ;; Hardware stack levels required when called: 1
   282 ;; This function calls:
   283 ;;		_setup
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289  0751                     _main:	
   290                           ;psect for function _main
   291                           
   292  0751                     l661:	
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   295                           
   296                           
   297                           ;main.c: 42:     setup();
   298  0751  120A  118A  2741  120A  118A  	fcall	_setup
   299  0756                     l663:
   300                           
   301                           ;main.c: 46:         if(PORTAbits.RA0 == 1){
   302  0756  1283               	bcf	3,5	;RP0=0, select bank0
   303  0757  1303               	bcf	3,6	;RP1=0, select bank0
   304  0758  1C05               	btfss	5,0	;volatile
   305  0759  2F5B               	goto	u11
   306  075A  2F5C               	goto	u10
   307  075B                     u11:
   308  075B  2F66               	goto	l34
   309  075C                     u10:
   310  075C                     l665:
   311                           
   312                           ;main.c: 47:             infnibble = infnibble + 1;
   313  075C  0870               	movf	_infnibble,w
   314  075D  3E01               	addlw	1
   315  075E  00F0               	movwf	_infnibble
   316  075F  0871               	movf	_infnibble+1,w
   317  0760  1803               	skipnc
   318  0761  3E01               	addlw	1
   319  0762  3E00               	addlw	0
   320  0763  00F1               	movwf	_infnibble+1
   321  0764  2F66               	goto	l34
   322  0765                     l35:
   323                           
   324                           ;main.c: 51:             __nop();
   325  0765  0000               	nop
   326  0766                     l34:	
   327                           ;main.c: 52:         }
   328                           
   329                           
   330                           ;main.c: 50:         while(PORTAbits.RA0 == 1){
   331  0766  1283               	bcf	3,5	;RP0=0, select bank0
   332  0767  1303               	bcf	3,6	;RP1=0, select bank0
   333  0768  1805               	btfsc	5,0	;volatile
   334  0769  2F6B               	goto	u21
   335  076A  2F6C               	goto	u20
   336  076B                     u21:
   337  076B  2F65               	goto	l35
   338  076C                     u20:
   339  076C                     l667:
   340                           
   341                           ;main.c: 54:         if (infnibble > 15){
   342  076C  0871               	movf	_infnibble+1,w
   343  076D  3A80               	xorlw	128
   344  076E  00FF               	movwf	btemp+1
   345  076F  3080               	movlw	128
   346  0770  027F               	subwf	btemp+1,w
   347  0771  1D03               	skipz
   348  0772  2F75               	goto	u35
   349  0773  3010               	movlw	16
   350  0774  0270               	subwf	_infnibble,w
   351  0775                     u35:
   352  0775  1C03               	skipc
   353  0776  2F78               	goto	u31
   354  0777  2F79               	goto	u30
   355  0778                     u31:
   356  0778  2F7B               	goto	l671
   357  0779                     u30:
   358  0779                     l669:
   359                           
   360                           ;main.c: 55:             infnibble = 0;
   361  0779  01F0               	clrf	_infnibble
   362  077A  01F1               	clrf	_infnibble+1
   363  077B                     l671:
   364                           
   365                           ;main.c: 58:         if(PORTAbits.RA1 == 1){
   366  077B  1283               	bcf	3,5	;RP0=0, select bank0
   367  077C  1303               	bcf	3,6	;RP1=0, select bank0
   368  077D  1C85               	btfss	5,1	;volatile
   369  077E  2F80               	goto	u41
   370  077F  2F81               	goto	u40
   371  0780                     u41:
   372  0780  2F8B               	goto	l39
   373  0781                     u40:
   374  0781                     l673:
   375                           
   376                           ;main.c: 59:             infnibble = infnibble - 1;
   377  0781  0870               	movf	_infnibble,w
   378  0782  3EFF               	addlw	255
   379  0783  00F0               	movwf	_infnibble
   380  0784  0871               	movf	_infnibble+1,w
   381  0785  1803               	skipnc
   382  0786  3E01               	addlw	1
   383  0787  3EFF               	addlw	255
   384  0788  00F1               	movwf	_infnibble+1
   385  0789  2F8B               	goto	l39
   386  078A                     l40:
   387                           
   388                           ;main.c: 63:             __nop();
   389  078A  0000               	nop
   390  078B                     l39:	
   391                           ;main.c: 64:         }
   392                           
   393                           
   394                           ;main.c: 62:         while(PORTAbits.RA1 == 1){
   395  078B  1283               	bcf	3,5	;RP0=0, select bank0
   396  078C  1303               	bcf	3,6	;RP1=0, select bank0
   397  078D  1885               	btfsc	5,1	;volatile
   398  078E  2F90               	goto	u51
   399  078F  2F91               	goto	u50
   400  0790                     u51:
   401  0790  2F8A               	goto	l40
   402  0791                     u50:
   403  0791                     l41:
   404                           
   405                           ;main.c: 66:         if(infnibble < 0){
   406  0791  1FF1               	btfss	_infnibble+1,7
   407  0792  2F94               	goto	u61
   408  0793  2F95               	goto	u60
   409  0794                     u61:
   410  0794  2F99               	goto	l677
   411  0795                     u60:
   412  0795                     l675:
   413                           
   414                           ;main.c: 67:             infnibble = 15;
   415  0795  300F               	movlw	15
   416  0796  00F0               	movwf	_infnibble
   417  0797  3000               	movlw	0
   418  0798  00F1               	movwf	_infnibble+1
   419  0799                     l677:
   420                           
   421                           ;main.c: 71:         if(PORTAbits.RA2 == 1){
   422  0799  1D05               	btfss	5,2	;volatile
   423  079A  2F9C               	goto	u71
   424  079B  2F9D               	goto	u70
   425  079C                     u71:
   426  079C  2FA7               	goto	l44
   427  079D                     u70:
   428  079D                     l679:
   429                           
   430                           ;main.c: 72:             supnibble = supnibble + 1;
   431  079D  0872               	movf	_supnibble,w
   432  079E  3E01               	addlw	1
   433  079F  00F2               	movwf	_supnibble
   434  07A0  0873               	movf	_supnibble+1,w
   435  07A1  1803               	skipnc
   436  07A2  3E01               	addlw	1
   437  07A3  3E00               	addlw	0
   438  07A4  00F3               	movwf	_supnibble+1
   439  07A5  2FA7               	goto	l44
   440  07A6                     l45:
   441                           
   442                           ;main.c: 76:             __nop();
   443  07A6  0000               	nop
   444  07A7                     l44:	
   445                           ;main.c: 77:         }
   446                           
   447                           
   448                           ;main.c: 75:         while(PORTAbits.RA2 == 1){
   449  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   450  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   451  07A9  1905               	btfsc	5,2	;volatile
   452  07AA  2FAC               	goto	u81
   453  07AB  2FAD               	goto	u80
   454  07AC                     u81:
   455  07AC  2FA6               	goto	l45
   456  07AD                     u80:
   457  07AD                     l681:
   458                           
   459                           ;main.c: 78:         if (supnibble > 15){
   460  07AD  0873               	movf	_supnibble+1,w
   461  07AE  3A80               	xorlw	128
   462  07AF  00FF               	movwf	btemp+1
   463  07B0  3080               	movlw	128
   464  07B1  027F               	subwf	btemp+1,w
   465  07B2  1D03               	skipz
   466  07B3  2FB6               	goto	u95
   467  07B4  3010               	movlw	16
   468  07B5  0272               	subwf	_supnibble,w
   469  07B6                     u95:
   470  07B6  1C03               	skipc
   471  07B7  2FB9               	goto	u91
   472  07B8  2FBA               	goto	u90
   473  07B9                     u91:
   474  07B9  2FBC               	goto	l685
   475  07BA                     u90:
   476  07BA                     l683:
   477                           
   478                           ;main.c: 79:             supnibble = 0;
   479  07BA  01F2               	clrf	_supnibble
   480  07BB  01F3               	clrf	_supnibble+1
   481  07BC                     l685:
   482                           
   483                           ;main.c: 82:         if(PORTAbits.RA3 == 1){
   484  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   485  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   486  07BE  1D85               	btfss	5,3	;volatile
   487  07BF  2FC1               	goto	u101
   488  07C0  2FC2               	goto	u100
   489  07C1                     u101:
   490  07C1  2FCC               	goto	l49
   491  07C2                     u100:
   492  07C2                     l687:
   493                           
   494                           ;main.c: 83:             supnibble = supnibble - 1;
   495  07C2  0872               	movf	_supnibble,w
   496  07C3  3EFF               	addlw	255
   497  07C4  00F2               	movwf	_supnibble
   498  07C5  0873               	movf	_supnibble+1,w
   499  07C6  1803               	skipnc
   500  07C7  3E01               	addlw	1
   501  07C8  3EFF               	addlw	255
   502  07C9  00F3               	movwf	_supnibble+1
   503  07CA  2FCC               	goto	l49
   504  07CB                     l50:
   505                           
   506                           ;main.c: 87:             __nop();
   507  07CB  0000               	nop
   508  07CC                     l49:	
   509                           ;main.c: 88:         }
   510                           
   511                           
   512                           ;main.c: 86:         while(PORTAbits.RA3 == 1){
   513  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   514  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   515  07CE  1985               	btfsc	5,3	;volatile
   516  07CF  2FD1               	goto	u111
   517  07D0  2FD2               	goto	u110
   518  07D1                     u111:
   519  07D1  2FCB               	goto	l50
   520  07D2                     u110:
   521  07D2                     l51:
   522                           
   523                           ;main.c: 90:         if(supnibble < 0){
   524  07D2  1FF3               	btfss	_supnibble+1,7
   525  07D3  2FD5               	goto	u121
   526  07D4  2FD6               	goto	u120
   527  07D5                     u121:
   528  07D5  2FDA               	goto	l691
   529  07D6                     u120:
   530  07D6                     l689:
   531                           
   532                           ;main.c: 91:             supnibble = 15;
   533  07D6  300F               	movlw	15
   534  07D7  00F2               	movwf	_supnibble
   535  07D8  3000               	movlw	0
   536  07D9  00F3               	movwf	_supnibble+1
   537  07DA                     l691:
   538                           
   539                           ;main.c: 95:         PORTD = (16*supnibble) + infnibble;
   540  07DA  0872               	movf	_supnibble,w
   541  07DB  00F4               	movwf	??_main
   542  07DC  3004               	movlw	4
   543  07DD                     u135:
   544  07DD  1003               	clrc
   545  07DE  0DF4               	rlf	??_main,f
   546  07DF  3EFF               	addlw	-1
   547  07E0  1D03               	skipz
   548  07E1  2FDD               	goto	u135
   549  07E2  0870               	movf	_infnibble,w
   550  07E3  0774               	addwf	??_main,w
   551  07E4  0088               	movwf	8	;volatile
   552  07E5                     l693:
   553                           
   554                           ;main.c: 98:         if(PORTAbits.RA4 == 1){
   555  07E5  1E05               	btfss	5,4	;volatile
   556  07E6  2FE8               	goto	u141
   557  07E7  2FE9               	goto	u140
   558  07E8                     u141:
   559  07E8  2FEE               	goto	l54
   560  07E9                     u140:
   561  07E9                     l695:
   562                           
   563                           ;main.c: 99:             PORTB = supnibble + infnibble;
   564  07E9  0870               	movf	_infnibble,w
   565  07EA  0772               	addwf	_supnibble,w
   566  07EB  0086               	movwf	6	;volatile
   567  07EC  2FEE               	goto	l54
   568  07ED                     l55:
   569                           
   570                           ;main.c: 103:             __nop();
   571  07ED  0000               	nop
   572  07EE                     l54:	
   573                           ;main.c: 104:         }
   574                           
   575                           
   576                           ;main.c: 102:         while(PORTAbits.RA4 == 1){
   577  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   578  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   579  07F0  1A05               	btfsc	5,4	;volatile
   580  07F1  2FF3               	goto	u151
   581  07F2  2FF4               	goto	u150
   582  07F3                     u151:
   583  07F3  2FED               	goto	l55
   584  07F4                     u150:
   585  07F4  2F56               	goto	l663
   586  07F5  120A  118A  2800   	ljmp	start
   587  07F8                     __end_of_main:
   588                           
   589                           	psect	text1
   590  0741                     __ptext1:	
   591 ;; *************** function _setup *****************
   592 ;; Defined at:
   593 ;;		line 29 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620  0741                     _setup:	
   621                           ;psect for function _setup
   622                           
   623  0741                     l651:	
   624                           ;incstack = 0
   625                           ; Regs used in _setup: [wreg+status,2]
   626                           
   627                           
   628                           ;main.c: 30:     ANSEL = 0;
   629  0741  1683               	bsf	3,5	;RP0=1, select bank3
   630  0742  1703               	bsf	3,6	;RP1=1, select bank3
   631  0743  0188               	clrf	8	;volatile
   632                           
   633                           ;main.c: 31:     ANSELH = 0;
   634  0744  0189               	clrf	9	;volatile
   635                           
   636                           ;main.c: 32:     PORTA = 0;
   637  0745  1283               	bcf	3,5	;RP0=0, select bank0
   638  0746  1303               	bcf	3,6	;RP1=0, select bank0
   639  0747  0185               	clrf	5	;volatile
   640                           
   641                           ;main.c: 33:     PORTB = 0;
   642  0748  0186               	clrf	6	;volatile
   643                           
   644                           ;main.c: 34:     PORTD = 0;
   645  0749  0188               	clrf	8	;volatile
   646  074A                     l653:
   647                           
   648                           ;main.c: 35:     TRISA = 0b00011111;
   649  074A  301F               	movlw	31
   650  074B  1683               	bsf	3,5	;RP0=1, select bank1
   651  074C  1303               	bcf	3,6	;RP1=0, select bank1
   652  074D  0085               	movwf	5	;volatile
   653  074E                     l655:
   654                           
   655                           ;main.c: 36:     TRISB = 0;
   656  074E  0186               	clrf	6	;volatile
   657  074F                     l657:
   658                           
   659                           ;main.c: 37:     TRISD = 0;
   660  074F  0188               	clrf	8	;volatile
   661  0750                     l27:
   662  0750  0008               	return
   663  0751                     __end_of_setup:
   664  007E                     btemp	set	126	;btemp
   665  007E                     wtemp0	set	126
   666                           
   667                           	psect	idloc
   668                           
   669                           ;Config register IDLOC0 @ 0x2000
   670                           ;	unspecified, using default values
   671  2000                     	org	8192
   672  2000  3FFF               	dw	16383
   673                           
   674                           ;Config register IDLOC1 @ 0x2001
   675                           ;	unspecified, using default values
   676  2001                     	org	8193
   677  2001  3FFF               	dw	16383
   678                           
   679                           ;Config register IDLOC2 @ 0x2002
   680                           ;	unspecified, using default values
   681  2002                     	org	8194
   682  2002  3FFF               	dw	16383
   683                           
   684                           ;Config register IDLOC3 @ 0x2003
   685                           ;	unspecified, using default values
   686  2003                     	org	8195
   687  2003  3FFF               	dw	16383
   688                           
   689                           	psect	config
   690                           
   691                           ;Config register CONFIG1 @ 0x2007
   692                           ;	Oscillator Selection bits
   693                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   694                           ;	Watchdog Timer Enable bit
   695                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   696                           ;	Power-up Timer Enable bit
   697                           ;	PWRTE = OFF, PWRT disabled
   698                           ;	RE3/MCLR pin function select bit
   699                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   700                           ;	Code Protection bit
   701                           ;	CP = OFF, Program memory code protection is disabled
   702                           ;	Data Code Protection bit
   703                           ;	CPD = OFF, Data memory code protection is disabled
   704                           ;	Brown Out Reset Selection bits
   705                           ;	BOREN = OFF, BOR disabled
   706                           ;	Internal External Switchover bit
   707                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   708                           ;	Fail-Safe Clock Monitor Enabled bit
   709                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   710                           ;	Low Voltage Programming Enable bit
   711                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   712                           ;	In-Circuit Debugger Mode bit
   713                           ;	DEBUG = 0x1, unprogrammed default
   714  2007                     	org	8199
   715  2007  20D4               	dw	8404
   716                           
   717                           ;Config register CONFIG2 @ 0x2008
   718                           ;	Brown-out Reset Selection bit
   719                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   720                           ;	Flash Program Memory Self Write Enable bits
   721                           ;	WRT = OFF, Write protection off
   722  2008                     	org	8200
   723  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Aug 23 19:09:20 2022

                     l40 078A                       l41 0791                       l50 07CB  
                     l34 0766                       l27 0750                       l51 07D2  
                     l35 0765                       l44 07A7                       l45 07A6  
                     l54 07EE                       l55 07ED                       l39 078B  
                     l49 07CC                       u10 075C                       u11 075B  
                     u20 076C                       u21 076B                       u30 0779  
                     u31 0778                       u40 0781                       u41 0780  
                     u50 0791                       u51 0790                       u35 0775  
                     u60 0795                       u61 0794                       u70 079D  
                     u71 079C                       u80 07AD                       u81 07AC  
                     u90 07BA                       u91 07B9                       u95 07B6  
                    l651 0741                      l653 074A                      l661 0751  
                    l655 074E                      l671 077B                      l663 0756  
                    l657 074F                      l681 07AD                      l673 0781  
                    l665 075C                      l691 07DA                      l683 07BA  
                    l675 0795                      l667 076C                      l693 07E5  
                    l685 07BC                      l677 0799                      l669 0779  
                    l695 07E9                      l687 07C2                      l679 079D  
                    l689 07D6                      u100 07C2                      u101 07C1  
                    u110 07D2                      u111 07D1                      u120 07D6  
                    u121 07D5                      u140 07E9                      u141 07E8  
                    u150 07F4                      u151 07F3                      u135 07DD  
                   _main 0751                     btemp 007E                     start 0000  
                  ?_main 0074                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _setup 0741  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0074                   ?_setup 0074  
                 _ANSELH 0189  __end_of__initialization 07FC           __pcstackCOMMON 0074  
          __end_of_setup 0751                  ??_setup 0074               __pmaintext 0751  
                __ptext1 0741     end_of_initialization 07FC                _PORTAbits 0005  
    start_initialization 07F8              __pbssCOMMON 0070                ___latbits 0002  
              _infnibble 0070                _supnibble 0072  
